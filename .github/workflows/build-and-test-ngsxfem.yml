name: Build, test (and publish release) of ngsxfem
on: [push]
jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      uid_gid: ${{ steps.get-user.outputs.uid_gid }}
    steps:
      - id: get-user
        run: echo "::set-output name=uid_gid::$(id -u):$(id -g)"
  
  build:
    needs: configure
    runs-on: ubuntu-latest
    container: 
      image: ngsxfem/ngsolve:latest
      options: --user ${{ needs.configure.outputs.uid_gid }}
    steps:
      - uses: actions/checkout@v2
      - name: Build ngsxfem
        run: |
          git submodule update --init --recursive
          mkdir build
          mkdir install    
          cd build
          cmake -DBUILD_NGSOLVE=OFF -DCMAKE_INSTALL_PREFIX=../install ..
          make -j2
          make install
      - name: Chache build results
        uses: actions/cache@v2
        with:
          path: |
            build
            install
          key: ${{ runner.os }}-${{ github.sha }}-build-results

  ctest-tutorials:
    needs: [configure, build]
    runs-on: ubuntu-latest
    container: 
      image: ngsxfem/ngsolve:latest
      options: --user ${{ needs.configure.outputs.uid_gid }}
    steps:
      - uses: actions/checkout@v2
      - name: Retrieve cached build results
        uses: actions/cache@v2
        with:
          path: |
            build
            install
          key: ${{ runner.os }}-${{ github.sha }}-build-results
      - name: Run demo ctests
        run: .ci/ci_ctests.sh tutorial
        shell: bash
    continue-on-error: true

  ctest-mayfail:
    needs: [configure, build]
    runs-on: ubuntu-latest
    container: 
      image: ngsxfem/ngsolve:latest
      options: --user ${{ needs.configure.outputs.uid_gid }}
    steps:
      - uses: actions/checkout@v2
      - name: Retrieve cached build results
        uses: actions/cache@v2
        with:
          path: |
            build
            install
          key: ${{ runner.os }}-${{ github.sha }}-build-results
      - name: Run mayfail ctests
        run: .ci/ci_ctests.sh mayfail
        shell: bash
    continue-on-error: true
  
  ctest-pytests:
    needs: [configure, build]
    runs-on: ubuntu-latest
    container: 
      image: ngsxfem/ngsolve:latest
      options: --user ${{ needs.configure.outputs.uid_gid }}
    steps:
      - uses: actions/checkout@v2
      - name: Retrieve cached build results
        uses: actions/cache@v2
        with:
          path: |
            build
            install
          key: ${{ runner.os }}-${{ github.sha }}-build-results
      - name: Install python dependences
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install psutil
      - name: Run pytest ctests
        run: .ci/ci_ctests.sh pytests
        shell: bash

  publish:
    needs: [ctest-pytests, ctest-tutorials, ctest-mayfail]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v2
      - name: Update pip and Install setuptools
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install setuptools
      - name: Package xfem Sources for PyPI
        run: python3 setup.py sdist
      - name: Publish source distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  check-demo-codestyle:
    runs-on: ubuntu-latest  
    steps:
      - uses: actions/checkout@v2
      - name: Install python dependences
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pycodestyle
      - name: Check PEP8 conformity
        run: python3 -m pycodestyle demos/{*,spacetime/*,mpi/*}.py
        continue-on-error: true